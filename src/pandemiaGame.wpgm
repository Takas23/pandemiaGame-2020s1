import wollok.game.*
import simulacion.*
import agente.*
import personas.*
import manzanas.*

/*
 * TECLAS
 * 	FLECHAS => Movimiento del agente
 * 	M 		=> Estado de la simulacion (dia, personas, infectadas, sintomaticas)
 * 	N		=> Genera un nuevo infectado en una manzana random
 * 	B		=> Pasa al siguiente dia corriendo las simulaciones
 * 	J		=> Aisla los infectados en la ubicacion del agente
 * 	K		=> El agente pone la manzana en cuarentena al estilo "Fase7"
 * 	I		=> Muestra informacion sobre la manzana donde esta el agente (personas, infectadas, sintomaticos, contagiadores)
 */

object pandemiaGameConfig {
	method height() = 4
	method width() = 6
	method title() = "Simulacion - noCompila"
	
	method configureGame() {
		self.configureGameParameters()
		self.agregarManzanas()
		self.agregarPersonas() 
		self.configureTeclas()
		game.addVisual(agente)

	}
		
	method configureGameParameters() {
		game.height(self.height())
		game.width(self.width())
		game.title(self.title())
	}

	method agregarManzanas() {
		(1..game.width()).forEach({x => 
			(1..game.height()).forEach({y => 
				const nuevaManzana = simulacion.crearManzana()
				nuevaManzana.position(game.at(x-1,y-1))
				simulacion.agregarManzana(nuevaManzana)
				game.addVisual(nuevaManzana)
			})
		})
	}


	method agregarPersonas() {
		simulacion.manzanas().forEach({m => m.agregarPersonasManzana()})
	}



 	method configureTeclas() {
		keyboard.m().onPressDo({game.say(agente, "Dia:" + simulacion.diaActual()
				+ " Personas:" + simulacion.totalPersonas()
				+ " Infectados:" + simulacion.totalInfectados()
				+ " Sintomaticos:" + simulacion.totalSintomaticos())
					console.println(
					"Dia:" + simulacion.diaActual()
					+ " Personas:" + simulacion.totalPersonas()
					+ " Infectados:" + simulacion.totalInfectados()
					+ " Sintomaticos:" + simulacion.totalSintomaticos())}) 
		keyboard.n().onPressDo({simulacion.nuevoInfectado()})
		keyboard.b().onPressDo({
			simulacion.pasaUnDia()
			console.println("terminó el día "+(simulacion.diaActual()-1))})
		keyboard.right().onPressDo({agente.moveEste()})
		keyboard.left().onPressDo({agente.moveOeste()})
		keyboard.up().onPressDo({agente.moveNorte()})
		keyboard.down().onPressDo({agente.moveSur()})
		keyboard.j().onPressDo({agente.aislarInfectados()})
		keyboard.k().onPressDo({agente.cuarentenarManzana()})
		keyboard.i().onPressDo({game.say(agente, "Total:" + agente.dondeEstoy().personasQueViven()
				+ " Infectados:" + agente.dondeEstoy().cantidadInfectados()
				+ " Sintomaticos:" + agente.dondeEstoy().cantidadSintomaticos()
				+ " Contagiadores:" + agente.dondeEstoy().cantidadContagiadores()
				+ " Aislados:" + agente.dondeEstoy().cantidadAisladas())
					console.println(
					"Total:" + agente.dondeEstoy().personasQueViven()
					+ " Infectados:" + agente.dondeEstoy().cantidadInfectados()
					+ " Sintomaticos:" + agente.dondeEstoy().cantidadSintomaticos()
					+ " Contagiadores:" + agente.dondeEstoy().cantidadContagiadores()
					+ " Aislados:" + agente.dondeEstoy().cantidadAisladas())
					})		
	}
	
}

program pandemiaGame {
	pandemiaGameConfig.configureGame()
	game.start()
}
